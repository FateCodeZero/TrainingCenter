<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!--
		2、settings 标签包含很多重要的设置项
				setting：用来设置每一个设置项
				name：设置项名
				value：设置项的值
			建议：在进行属性配置的时候，应当显示的指定每一个属性的值，即使它是默认的
	 		目的：防止 mybatis 版本更替带来不一致的问题
	 -->
	 <settings>
		 <!-- 设置驼峰命名法 -->
		 <setting name="mapUnderscoreToCamelCase" value="true"/>

		 <!-- 设置字段为空时的 数据库类型，默认为 OTHER（oracle不认识） -->
		 <setting name="jdbcTypeForNull" value="NULL"/>

		 <!-- 开启全局二级缓存 -->
		 <setting name="cacheEnabled" value="true"/>

		 <!-- 开启懒加载策略，对所有关联对象都会延迟加载（默认false） -->
		 <setting name="lazyLoadingEnabled" value="true"/>

		 <!-- 开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属性会按需加载
	 			在mybatis 3.4.1之前默认为 true，之后为 false
	 	 -->
		 <setting name="aggressiveLazyLoading" value="false"/>

		 <!-- 打印查询语句 -->
		 <setting name="logImpl" value="STDOUT_LOGGING" />

	 </settings>

	<!--
		5、databaseIdProvider，支持多数据库产商（mysql、oracle等）
					type="DB_VENDOR"：VendorDatabaseIdProvider
						作用：得到数据库产商的标识（驱动getDatabaseProductName()），让mybatis客根据标识来执行不同的sql。
									MySQL，Oracle，SQL Server，XXX
	 -->
	 <databaseIdProvider type="DB_VENDOR">
	 		<property name="MySQL" value="mysql"/>
	 		<property name="Oracle" value="oracle" />
	 		<property name="SQL Server" value="sqlserver"/>
	 </databaseIdProvider>

</configuration>